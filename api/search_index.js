var search_data = {
    'index': {
        'searchIndex': ["joomla","joomla\\validator","joomla\\validator\\abstractvalidator","joomla\\validator\\integervalidator","joomla\\validator\\lengthvalidator","joomla\\validator\\numbervalidator","joomla\\validator\\rangevalidator","joomla\\validator\\requiredvalidator","joomla\\validator\\validationexception","joomla\\validator\\validatorinterface","joomla\\validator\\abstractvalidator::__construct","joomla\\validator\\abstractvalidator::__tostring","joomla\\validator\\abstractvalidator::geterrors","joomla\\validator\\abstractvalidator::getoption","joomla\\validator\\abstractvalidator::isvalid","joomla\\validator\\abstractvalidator::setoption","joomla\\validator\\validatorinterface::geterrors","joomla\\validator\\validatorinterface::isvalid"],
        'info': [["Joomla","","Joomla.html","","",3],["Joomla\\Validator","","Joomla\/Validator.html","","",3],["AbstractValidator","Joomla\\Validator","Joomla\/Validator\/AbstractValidator.html","","Abstract validator.",1],["IntegerValidator","Joomla\\Validator","Joomla\/Validator\/IntegerValidator.html"," < RangeValidator","Validates the value as an integer.",1],["LengthValidator","Joomla\\Validator","Joomla\/Validator\/LengthValidator.html"," < AbstractValidator","Validates the value against the minimum and maximum",1],["NumberValidator","Joomla\\Validator","Joomla\/Validator\/NumberValidator.html"," < RangeValidator","Validates the value as an floating point number.",1],["RangeValidator","Joomla\\Validator","Joomla\/Validator\/RangeValidator.html"," < AbstractValidator","Validates the value against the minimum and maximum",1],["RequiredValidator","Joomla\\Validator","Joomla\/Validator\/RequiredValidator.html"," < AbstractValidator","Validates that a value is not empty.",1],["ValidationException","Joomla\\Validator","Joomla\/Validator\/ValidationException.html"," < Exception","Validation Exception Class.",1],["ValidatorInterface","Joomla\\Validator","Joomla\/Validator\/ValidatorInterface.html","","Validator interface.",1],["AbstractValidator::__construct","Joomla\\Validator\\AbstractValidator","Joomla\/Validator\/AbstractValidator.html#method___construct","(array $options = null)","Validator class contructor.",2],["AbstractValidator::__toString","Joomla\\Validator\\AbstractValidator","Joomla\/Validator\/AbstractValidator.html#method___toString","()","Converts the validator to a string representation.",2],["AbstractValidator::getErrors","Joomla\\Validator\\AbstractValidator","Joomla\/Validator\/AbstractValidator.html#method_getErrors","()","Gets the errors if the value was invalid.",2],["AbstractValidator::getOption","Joomla\\Validator\\AbstractValidator","Joomla\/Validator\/AbstractValidator.html#method_getOption","(string $name)","Gets a configuration option.",2],["AbstractValidator::isValid","Joomla\\Validator\\AbstractValidator","Joomla\/Validator\/AbstractValidator.html#method_isValid","(mixed $value)","Checks that the value is valid.",2],["AbstractValidator::setOption","Joomla\\Validator\\AbstractValidator","Joomla\/Validator\/AbstractValidator.html#method_setOption","(string $name, scalar $value)","Sets a configuration option.",2],["ValidatorInterface::getErrors","Joomla\\Validator\\ValidatorInterface","Joomla\/Validator\/ValidatorInterface.html#method_getErrors","()","Gets the errors if the value was invalid.",2],["ValidatorInterface::isValid","Joomla\\Validator\\ValidatorInterface","Joomla\/Validator\/ValidatorInterface.html#method_isValid","(scalar $value)","Checks that the value is valid.",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']